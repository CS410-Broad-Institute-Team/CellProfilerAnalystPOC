{"version":3,"sources":["logo.svg","example_SETUP.SQL","App.js","reportWebVitals.js","index.js"],"names":["App","showFile","fileName","a","preventDefault","reader","FileReader","onload","text","target","result","console","log","alert","readAsText","files","fetch","raw","then","r","split","lines","indexOf","className","src","logo","alt","type","onChange","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAAe,MAA0B,iCCA1B,G,4BAAA,IAA0B,2C,QCuD1BA,MA7Cf,WAEE,IAAIC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDACbD,EAASE,kBACHC,EAAS,IAAIC,YACZC,OAAP,uCAAgB,WAAOL,GAAP,eAAAC,EAAA,sDACRK,EAAQN,EAASO,OAAOC,OAC9BC,QAAQC,IAAIJ,GACZK,MAAML,GAHQ,2CAAhB,sDAKAH,EAAOS,WAAWZ,EAASO,OAAOM,MAAM,IAR3B,2CAAH,sDAsBZ,OAXAC,MAAMC,GACNC,MAAK,SAAAC,GAAC,OAAIA,EAAEX,UACZU,MAAK,SAAAV,GACL,OAAOA,EAAKY,MAAM,SAElBF,MAAK,SAAAG,GACLV,QAAQC,IAAIS,EAAMC,QAAQ,8BAC1BX,QAAQC,IAAIS,EAAMC,QAAQ,gDAKxB,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,0EAGP,uBAAOC,KAAK,OAAOC,SAAY,SAAC1B,GAAD,OAAcD,EAASC,MAC/C,mBACEqB,UAAU,WACVM,KAAK,sBACLpB,OAAO,SACPqB,IAAI,sBAJN,+BC9BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99aa7397.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/example_SETUP.c8183f4e.SQL\";","import logo from './logo.svg';\nimport './App.css';\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as dfd from \"danfojs/src/index\";\nimport * as lgreg from \"ml-logistic-regression\";\nimport * as prprcss from \"ml-preprocess\";\n\nimport raw from \"./example_SETUP.SQL\";\n\nfunction App() {\n  // file read callback\n  var showFile = async (fileName) => {\n    fileName.preventDefault()\n    const reader = new FileReader()\n    reader.onload = async (fileName) => { \n      const text = (fileName.target.result)\n      console.log(text)\n      alert(text)\n    };\n    reader.readAsText(fileName.target.files[0])\n  }\t\n\n  fetch(raw)\n\t.then(r => r.text())\n\t.then(text => {\n\t\treturn text.split(\"\\n\");\n\t})\n\t.then(lines => {\n\t\tconsole.log(lines.indexOf(\"CREATE TABLE per_object \\(\"));\n\t\tconsole.log(lines.indexOf(\" PRIMARY KEY  \\(ImageNumber,ObjectNumber\\)\"));\n\t})\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          woo the atom thingy do the rotate woo yea\n        </p>\n\t<input type=\"file\" onChange = {(fileName) => showFile(fileName)} />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}